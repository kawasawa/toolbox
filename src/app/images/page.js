// Generated by GitHub Copilot
'use client';

import { useState, useEffect } from 'react';
import { ImageInput } from '@/components/images/ImageInput';
import { ImageEditor } from '@/components/images/ImageEditor';
import { ImagePreview } from '@/components/images/ImagePreview';
import { ExifViewer } from '@/components/images/ExifViewer';
import { useImageProcessor } from '@/hooks/images/useImageProcessor';
import { useComparisonSlider } from '@/hooks/images/useComparisonSlider';
import { useImageOutput } from '@/hooks/images/useImageOutput';

/**
 * 画像操作ページのコンポーネント
 * @returns {JSX.Element} 画像操作ページのJSX要素
 */
export default function ImageProcessor() {
  // URL入力用の状態変数
  const [imageUrl, setImageUrl] = useState('');
  
  // カスタムフックを使用
  const {
    originalImage,
    processedImage,
    isLoading,
    isProcessing,
    dimensions,
    format,
    compressionQuality,
    exifData,
    compressionRatio,
    isCompressibleFormat,
    setDimensions,
    setFormat,
    setCompressionQuality,
    loadImageFromFile,
    loadImageFromUrl,
    loadImageFromClipboard,
    processImage
  } = useImageProcessor();
  
  const {
    compareMode,
    activeTab,
    sliderPosition,
    sliderContainerRef,
    sliderHandleRef,
    setCompareMode,
    setActiveTab,
    handleProcessedImageChange
  } = useComparisonSlider();
  
  const { saveImage, copyImageToClipboard } = useImageOutput();
  
  // 処理後の画像が変化したとき、コンパレイザーの表示を更新
  useEffect(() => {
    handleProcessedImageChange(processedImage);
  }, [processedImage, handleProcessedImageChange]);

  return (
    <div className="mx-auto max-w-6xl p-4">
      <h1 className="text-3xl font-bold mb-8 text-center">画像処理</h1>
      
      {/* 画像の読み込み方法セクション */}
      <ImageInput
        imageUrl={imageUrl}
        setImageUrl={setImageUrl}
        isLoading={isLoading}
        loadImageFromFile={loadImageFromFile}
        loadImageFromUrl={loadImageFromUrl}
        loadImageFromClipboard={loadImageFromClipboard}
      />
      
      {/* 画像表示・編集セクション */}
      {originalImage && (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          {/* 編集設定 */}
          <ImageEditor
            isProcessing={isProcessing}
            dimensions={dimensions}
            setDimensions={setDimensions}
            format={format}
            setFormat={setFormat}
            compressionQuality={compressionQuality}
            setCompressionQuality={setCompressionQuality}
            processImage={processImage}
            isCompressibleFormat={isCompressibleFormat}
            originalImage={originalImage} // originalImage プロパティを追加
          />

          {/* 画像プレビュー */}
          <ImagePreview
            originalImage={originalImage}
            processedImage={processedImage}
            compareMode={compareMode}
            setCompareMode={setCompareMode}
            activeTab={activeTab}
            setActiveTab={setActiveTab}
            sliderPosition={sliderPosition}
            sliderContainerRef={sliderContainerRef}
            sliderHandleRef={sliderHandleRef}
            format={format}
            compressionRatio={compressionRatio}
            saveImage={saveImage}
            copyImageToClipboard={copyImageToClipboard}
          />
        </div>
      )}
      
      {/* EXIF情報 */}
      {originalImage && <ExifViewer exifData={exifData} />}
    </div>
  );
}